---
title: "Practice Problems 1"
author: "DOFPro group"
---

In this first set of practice problems, we are going to be starting with the 1-D rocket equation. We will prove that the given models solve the equation for the chosen restrictions. We will use the models to determine drag coefficients and thrust curves from flight data.

The set of equations that make up the rocket equation are:
$$
\vec{𝑎} = \dot{\vec{𝑣}} = \frac{\vec{T}}{m}+ \vec{𝑔} −\frac{1}{2}{𝐶_𝐷}{𝐴_𝑃}{\frac{𝜌}{m}}\vec{𝑣}|\vec{𝑣}|
$$
(1)

and

$$
\dot{𝑚}=\frac{|\vec{𝑇}|}{|\vec{𝑣_𝑒}|}
$$
(2)

## 1-D Constant Thrust, Constant Mass, Constant 𝑔, Drag Coefficient $𝐶_𝐷$

Depending on what assumptions you make, you can get different solutions to the rocket equation. This practice problem proves or derives several of them. To explain the difference: prove means that you are given a solution to the differential equation, and you prove by plugging-in to the DE that it solves the equation and the boundary or initial conditions, derive means to use the solution techniques for differential equations and determine a solution that solves the DE and the boundary or initial conditions.

Assume that the change in rocket mass is small compared to the rocket mass. The rocket ascends in the positive vertical, 𝑥, direction and begins at time, $𝑡_0$ , with position, $𝑥_0$ , velocity, $𝑣_0$, and constant thrust, 𝑇. Further define $𝑣_{max}$ as

$$
𝑣_{max}=\sqrt{\frac{2(𝑇−𝑚𝑔)}{𝜌𝐶_𝐷𝐴_𝑃}}
$$
(3)

and 𝑏 as

$$
𝑏=\frac{𝑇−𝑚𝑔}{𝑚}
$$
(4)

Equation 1 then becomes

$$
𝑎=\dot{𝑣}=𝑏−\frac{1}{2}𝐶_𝐷𝐴_𝑃\frac{𝜌}{𝑚}𝑣|𝑣|
$$
(5)

Prove that the solution for $𝑣_0<𝑣_{max}$ is

$$
𝑣=𝑣_{max}tanh[\frac{𝑏}{𝑣_{max}}(𝑡−𝑡_0)+{tanh}^{−1}\frac{𝑣_0}{𝑣_{max}}]
$$
(6)

and

$$
𝑥−𝑥_0=\frac{{𝑣_{max}}^2}{𝑏}[ln[cosh(\frac{𝑏}{𝑣_{max}}(𝑡−𝑡_0)+{tanh}^{−1}\frac{𝑣_0}{𝑣_{max}})]−ln[cosh({tanh}^{−1}\frac{𝑣_0}{𝑣_{max}})]]
$$
(7)

You can eliminate the absolute value sign by considering whether correct factor is $−𝑣^2$$ or $𝑣^2$ depending on which direction is positive 𝑥 and whether the drag opposes the motion or adds to the motion.

Prove that the solution for $𝑣_0>𝑣_{max}$ is

$$
𝑣=𝑣_{max}coth[\frac{𝑏}{𝑣_{max}}(𝑡−𝑡0)+{coth}^{−1}\frac{𝑣_0}{𝑣_{max}}]
$$
(8)

and

$$
𝑥−𝑥_0=\frac{{𝑣_{max}}^{2}}{𝑏}[ln[sinh(\frac{𝑏}{𝑣_{max}}(𝑡−𝑡0)+{coth}^{−1}\frac{𝑣_0}{𝑣_{max}})]−ln[sinh({coth}^{−1}\frac{𝑣_0}{𝑣_{max}})]]
$$
(9)

## 1-D Coasting Ascent (No Thrust), Constant 𝑔, Drag Coefficient $𝐶_𝐷$

The positive vertical direction is 𝑥. The rocket ascends in the positive vertical direction, and begins at time, $𝑡_0$, with position, $𝑥_0$, and velocity, $𝑣_0$. Further define $𝑣_𝑡$ as

$$
𝑣_𝑡=\sqrt{\frac{2𝑚𝑔}{𝜌𝐶_𝐷𝐴_𝑃}}
$$
(10)

Equation 1 then becomes

$$
𝑎=\dot{𝑣}=−𝑔(1+\frac{𝑣^2}{𝑣_t^2})
$$
(11)

Prove that the solution is

$$
𝑣=𝑣_𝑡tan[\frac{−𝑔}{𝑣_𝑡}(𝑡−𝑡_0)+{tan}^{−1}\frac{𝑣_0}{𝑣_𝑡}]
$$
(12)

and

$$
𝑥−𝑥_0=\frac{𝑣^2_𝑡}{𝑔}(ln(cos[\frac{𝑔}{𝑣_𝑡}(𝑡−𝑡0)−{tan}^{−1}\frac{𝑣_0}{𝑣_𝑡}])+ln\sqrt{1+\frac{𝑣^2_0}{𝑣^2_𝑡}})
$$
(13)

## 1-D Coasting Descent from Apogee (No Thrust), Constant 𝑔, Drag Coefficient $𝐶_𝐷$

The positive vertical direction is 𝑥. The rocket descends in the negative vertical direction, and begins at time, $𝑡_{apogee}$, with position, $𝑥_{apogee}$, and velocity, $𝑣_{apogee}=0$. Further define $𝑣_𝑡$ as

$$
𝑣_𝑡=\sqrt{\frac{2𝑚𝑔}{𝜌𝐶_𝐷𝐴_𝑃}}
$$
(14)

Simplify Equation 5 for these conditions and prove that the solution is

$$
𝑣=𝑣_𝑡tanh[\frac{−𝑔}{𝑣_𝑡}(𝑡−𝑡_{apogee})]
$$
(15)

and

$$
𝑥−𝑥_{apogee}=\frac{𝑣^2_𝑡}{−𝑔}ln(cosh[\frac{−𝑔}{𝑣_𝑡}(𝑡−𝑡_{apogee})])
$$
(16)

## Time from Apogee to Ground

Use Equation 16 to determine the time, $𝑡_{desc}$ for a rocket to descend from apogee to the ground. For a ballistic fall you would use the $𝐶_𝐷$ of the rocket, and for a parachute descent, you would use the area and $𝐶_𝐷$ of the parachute.

Show that for $𝑔𝑥_0/𝑣^2_𝑡>100$ the approximation

$$
𝑡−𝑡_{apogee}=\frac{𝑥_{apogee}}{𝑣_𝑡}+\frac{𝑣_𝑡}{𝑔}ln2
$$
(17)

is accurate and doesn't have the computational difficulties of your above solution.

* Use Equation 12 and the fact that 𝑣=0 at apogee to determine the time from burnout to apogee.

* Use the result from the previous step and Equation 13 to determine the distance from burnout to apogee.

For the flight of a LOC Weasel on an F67-9W motor, calculate:

* the velocity and altitude at burnout,
* the time from liftoff to apogee (ignore the 9-second delay for this part),
* the difference between the time to apogee and the 9-second delay,
* the altitude at apogee,
* the time required for a ballistic fall from apogee,
* the velocity at impact for a ballistic fall
* the time required for a parachute descent from apogee,
* the velocity at landing for a parachute descent from apogee.

Data for a LOC Weasel with avionics on an F67-9W:

| Item | Value |
|-----------|------|
| Mass (no motor) | 453.0 g |
| Mass (w motor) | 534.0 g |
| Propellant mass | 30 g |
| CG (no motor) | 23.72 in |
| CG (w motor) | 27.48 in |
| diameter | 1.64 in |
| $C_D$ | 0.70 |
| motor data | [See Thrustcurve.org](https://www.thrustcurve.org/motors/AeroTech/F67W/) |

## Comparison with Open Rocket/Rocksim

How do your calculations compare with the results from Open Rocket or Rocksim? An Open Rocket model for the above rocket is [here](https://pages.hmc.edu/spjut/AdvRoc/SimModels/LOC-Weasel-E178.ork). Open Rocket is a Java app, but a group of dedicated volunteers have created installers for it. Go to [Open Rocket](https://openrocket.info/) to get a version that is appropriate for your computer and OS. There are some outdated hints for usage at Some [Hints for Open Rocket](https://pages.hmc.edu/spjut/AdvRoc/PDF/OpenRocketHints.pdf).